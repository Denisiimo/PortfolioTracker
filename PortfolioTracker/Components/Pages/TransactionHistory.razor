@page "/TransactionHistory";

@inject TransactionProvider TransactionProvider;


@* Transaction Title *@
<h3 class="transaction-title">Transaction History</h3>

@* Transaction Table *@
<table class="transaction-table">
    <thead>
        <tr>
            <th>Currency Name</th>
            <th>Amount</th>
            <th>Side</th>
            <th>Buying Price</th>
            <th>Date</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var transaction in transactions)
        {
            <tr>
                <td>@transaction.CurrencyName</td>
                <td>$@transaction.BuyingAmount</td>
                <td>@transaction.Side</td>
                <td>@transaction.BuyingPrice</td>
                <td>@transaction.Date.ToString("yyyy-MM-dd HH:mm")</td>
            </tr>
        }
    </tbody>
</table>

<style>
    .transaction-title {
        text-align: center;
        font-size: 2rem;
        font-weight: bold;
        color: #007BFF;
        margin-bottom: 20px;
    }

    .transaction-table {
        width: 100%;
        border-collapse: collapse;
        margin: 20px auto; /* Center the table */
        font-size: 1rem;
        text-align: left;
    }

        .transaction-table th, .transaction-table td {
            padding: 12px 15px;
            border: 1px solid #ddd;
        }

        .transaction-table th {
            background-color: #007BFF; /* Blue accent */
            color: white;
            font-weight: bold;
        }

        .transaction-table tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        .transaction-table tr:hover {
            background-color: #e9f5ff; /* Light blue hover effect */
        }
</style>



@code {
    private IEnumerable<Transaction> transactions;

    protected override async Task OnInitializedAsync()
    {
        transactions = await TransactionProvider.GetAllTransactionsAsync();
    }
}
